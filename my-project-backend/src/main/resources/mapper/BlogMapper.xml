<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.BlogMapper">

    <!-- 查询所有Blog -->
    <select id="findAll" resultType="Blog">
        SELECT id, title, description, category, date, content, type
        FROM db_blogs
        WHERE type = 'normal'
    </select>

    <!-- 查询所有AltBlog -->
    <select id="findAllAlt" resultType="Blog">
        SELECT id, title, description, category, date, content, type
        FROM db_blogs
        WHERE type = 'hentai'
    </select>

    <!-- 按照分类查询Blog -->
    <select id="findByCategory" parameterType="String" resultType="Blog">
        SELECT id, title, description, category, date, content, type
        FROM db_blogs
        WHERE category = #{category}
    </select>

    <!-- 根据ID更新Blog -->
    <!-- MyBatis 在遇到多个参数时，会自动将它们打包进一个 Map<String, Object>，键是你用 @Param 注解定义的参数名（比如 "id" 和 "blog"），值是对应的对象。于是你就可以在 XML 中用 #{id} 和 #{blog.title} 这样的表达方式。 -->
    <update id="update">
        UPDATE
            db_blogs
        SET
            title = #{blog.title},
            category = #{blog.category},
            description = #{blog.description},
            content = #{blog.content}
        WHERE id = #{id}
    </update>

    <!-- 插入一条博客记录 -->
    <!-- 动态SQL -->
    <insert id="insert" parameterType="Blog">
        INSERT INTO db_blogs
        (title, description, category, content, type)
        VALUES
        (
        #{title},
        #{description},
        #{category},
        #{content},
        <choose>
            <!-- 如果 category 是 hentai，就插入 'hentai' -->
            <when test="category == 'hentai'">'hentai'</when>
            <!-- 否则插入 'normal' -->
            <otherwise>'normal'</otherwise>
        </choose>
        )
    </insert>

    <select id="getBlogById" resultType="Blog">
        SELECT * FROM db_blogs WHERE id = #{id}
    </select>


</mapper>